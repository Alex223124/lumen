<% if @group %>
<ol class="breadcrumb">
  <% if current_account.memberships.count > 1 %>
    <li><a href="/">Groups</a></li>
  <% end %>
  <li>
    <a href="/groups/<%=@group.slug%>"><%=@group.slug%></a>    
  </li>
  <li class="active">
    Analytics
  </li>
</ol>
<% end %>


<script src="/amcharts/amcharts.js" type="text/javascript"></script>
<script src="/amcharts/serial.js" type="text/javascript"></script>
<script src="/amcharts/amstock.js" type="text/javascript"></script>

<style>
  .amChartsCompareList > div { height: 25px !important }
  .amChartsPeriodSelector .btn { margin-bottom: 3px }  
</style>

<div id="chartdiv" style="width: 100%; height: 500px;"></div>
<script>
  $(function() {
      
    AmCharts.ready(function () {

      var chart = new AmCharts.AmStockChart();
      chart.pathToImages = "/amcharts/images/";
    
      // DATASETS //////////////////////////////////////////
      // create data sets first

<% @collections.each { |resources|  
  
  model = resources.first.class
  start_date = resources.first.created_at.to_date

  dates = {}
  resources.each { |x| 
    d = x.created_at.to_date
    dates[d] = [] if !dates[d] 
    dates[d] << x
  } %>
        var <%=model.to_s%>Data = new AmCharts.DataSet();
  <%=model.to_s%>Data.title = "<%= model == Conversation ? "Conversations with #{@conversation_threshold} or more posts" : model.to_s.underscore.humanize.pluralize%>";
  <%=model.to_s%>Data.fieldMappings = [
        {
          fromField: "cumulative",
          toField: "cumulative"
        },
        {
          fromField: "increase",
          toField: "increase"
        }];
  <%=model.to_s%>Data.dataProvider = [
  <%= x=0; start_date.upto(Date.today).map { |d| if dates[d]; x += dates[d].count; end; "{date: '#{d.to_s(:db)}', increase: #{dates[d] ? dates[d].count : 0}, cumulative: #{x}}" }.join(', ') %>
    ]
  <%=model.to_s%>Data.categoryField = "date";     
<% } %>
    
  // set data sets to the chart
  chart.dataSets = [<%= @collections.map { |resources| "#{resources.first.class.to_s}Data" }.join(',') %>]
    
  // PANELS ///////////////////////////////////////////                                                  
  // first stock panel
  var stockPanel1 = new AmCharts.StockPanel();
  stockPanel1.showCategoryAxis = false;
  stockPanel1.title = "Cumulative total";
  stockPanel1.percentHeight = 70;
    
  // graph of first stock panel
  var graph1 = new AmCharts.StockGraph();
  graph1.valueField = "cumulative";
  graph1.comparable = true;
  graph1.compareField = "cumulative";
  graph1.bullet = "round";
  graph1.bulletBorderColor = "#FFFFFF";
  graph1.bulletBorderAlpha = 1;
  graph1.balloonText = "[[title]]:<b>[[value]]</b>";
  graph1.compareGraphBalloonText = "[[title]]:<b>[[value]]</b>";
  graph1.compareGraphBullet = "round";
  graph1.compareGraphBulletBorderColor = "#FFFFFF";
  graph1.compareGraphBulletBorderAlpha = 1;
  stockPanel1.addStockGraph(graph1);
    
  // create stock legend                
  var stockLegend1 = new AmCharts.StockLegend();
  stockLegend1.periodValueTextComparing = "[[percents.value.close]]%";
  stockLegend1.periodValueTextRegular = "[[value.close]]";
  stockPanel1.stockLegend = stockLegend1;   
    
  // second stock panel
  var stockPanel2 = new AmCharts.StockPanel();
  stockPanel2.title = "Increase";
  stockPanel2.percentHeight = 30;
  var graph2 = new AmCharts.StockGraph();
  graph2.valueField = "increase";
  graph2.type = "column";
  graph2.showBalloon = false;
  graph2.fillAlphas = 1;
  stockPanel2.addStockGraph(graph2);

  var stockLegend2 = new AmCharts.StockLegend();
  stockLegend2.periodValueTextRegular = "[[value.close]]";
  stockPanel2.stockLegend = stockLegend2;
    
  // set panels to the chart
  chart.panels = [stockPanel1, stockPanel2];
    
    
  // OTHER SETTINGS ////////////////////////////////////
  var sbsettings = new AmCharts.ChartScrollbarSettings();
  sbsettings.graph = graph1;
  chart.chartScrollbarSettings = sbsettings;
    
  // CURSOR
  var cursorSettings = new AmCharts.ChartCursorSettings();
  cursorSettings.valueBalloonsEnabled = true;
  chart.chartCursorSettings = cursorSettings;
    
    
  // PERIOD SELECTOR ///////////////////////////////////
  var periodSelector = new AmCharts.PeriodSelector();
  periodSelector.position = "left";
  periodSelector.periods = [{
      period: "DD",
      count: 10,
      label: "10 days"
    }, {
      period: "MM",
      selected: true,
      count: 1,
      label: "1 month"
    },
    {
      period: "MM",
      count: 3,
      label: "3 month"
    },  
    {
      period: "YYYY",
      count: 1,
      label: "1 year"
    }, {
      period: "YTD",
      label: "YTD"
    }, {
      period: "MAX",
      label: "MAX"
    }];
  chart.periodSelector = periodSelector;
    
    
  // DATA SET SELECTOR
  var dataSetSelector = new AmCharts.DataSetSelector();
  dataSetSelector.position = "left";
  chart.dataSetSelector = dataSetSelector;
         
                 
  chart.addListener('zoomed', function() { 
    console.log('updated');
    $("g:contains('chart by amcharts.com')").hide();            
    $('.amChartsButton').addClass('btn btn-default');
    $('.amChartsButtonSelected').addClass('btn btn-primary');  
    $('.amChartsInputField').addClass('form-control').next('br').remove();
  });

  chart.write('chartdiv');   

});
        
});
</script>

